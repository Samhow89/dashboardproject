{"ast":null,"code":"const useFetch = () => {\n  fetch('http://127.0.0.1:5000/projects/all').then(res => {\n    if (!res.ok) {\n      // error coming back from server\n      throw Error('could not fetch the data for that resource');\n    }\n    return res.json();\n  }).then(data => {\n    setIsPending(false);\n    setBlogs(data);\n    setError(null);\n  }).catch(err => {\n    // auto catches network / connection error\n    setIsPending(false);\n    setError(err.message);\n  });\n};\nexport default useFetch;","map":{"version":3,"names":["useFetch","fetch","then","res","ok","Error","json","data","setIsPending","setBlogs","setError","catch","err","message"],"sources":["C:/Users/168960/OneDrive - Places for People/Documents/Dashboard/frontend/src/useFetch.js"],"sourcesContent":["const useFetch = () => {\r\n\r\n  fetch('http://127.0.0.1:5000/projects/all')\r\n      .then(res => {\r\n        if (!res.ok) { // error coming back from server\r\n          throw Error('could not fetch the data for that resource');\r\n        } \r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        setIsPending(false);\r\n        setBlogs(data);\r\n        setError(null);\r\n      })\r\n      .catch(err => {\r\n        // auto catches network / connection error\r\n        setIsPending(false);\r\n        setError(err.message);\r\n      })\r\n      \r\n}\r\n \r\nexport default useFetch;"],"mappings":"AAAA,MAAMA,QAAQ,GAAGA,CAAA,KAAM;EAErBC,KAAK,CAAC,oCAAoC,CAAC,CACtCC,IAAI,CAACC,GAAG,IAAI;IACX,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;MAAE;MACb,MAAMC,KAAK,CAAC,4CAA4C,CAAC;IAC3D;IACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;EACnB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;IACZC,YAAY,CAAC,KAAK,CAAC;IACnBC,QAAQ,CAACF,IAAI,CAAC;IACdG,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;IACZ;IACAJ,YAAY,CAAC,KAAK,CAAC;IACnBE,QAAQ,CAACE,GAAG,CAACC,OAAO,CAAC;EACvB,CAAC,CAAC;AAER,CAAC;AAED,eAAeb,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}