{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  const [isMounted, setIsMounted] = useState(true); // Add a flag to track component mount status\n\n  useEffect(() => {\n    const abortCont = new AbortController();\n    fetch(url, {\n      signal: abortCont.signal\n    }).then(res => {\n      if (!res.ok) {\n        throw Error('Could not fetch the data for that resource');\n      }\n      return res.json();\n    }).then(data => {\n      if (isMounted) {\n        // Check if the component is still mounted before updating state\n        setIsPending(false);\n        setData(data);\n        setError(null);\n      }\n    }).catch(err => {\n      if (isMounted) {\n        // Check if the component is still mounted before updating state\n        if (err.name === 'AbortError') {\n          console.log('Fetch aborted');\n        } else {\n          setIsPending(false);\n          setError(err.message);\n        }\n      }\n    });\n\n    // Cleanup function to abort the fetch\n    return () => {\n      abortCont.abort();\n      setIsMounted(false); // Set the flag to indicate that the component is unmounted\n    };\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n_s(useFetch, \"yWp5aLi96L5qXcEjMAu5NsKl/Zc=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","_s","data","setData","isPending","setIsPending","error","setError","isMounted","setIsMounted","abortCont","AbortController","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort"],"sources":["C:/Users/168960/OneDrive - Places for People/Documents/Dashboard/frontend/src/useFetch.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isMounted, setIsMounted] = useState(true); // Add a flag to track component mount status\r\n\r\n  useEffect(() => {\r\n    const abortCont = new AbortController();\r\n\r\n    fetch(url, { signal: abortCont.signal })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw Error('Could not fetch the data for that resource');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        if (isMounted) { // Check if the component is still mounted before updating state\r\n          setIsPending(false);\r\n          setData(data);\r\n          setError(null);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (isMounted) { // Check if the component is still mounted before updating state\r\n          if (err.name === 'AbortError') {\r\n            console.log('Fetch aborted');\r\n          } else {\r\n            setIsPending(false);\r\n            setError(err.message);\r\n          }\r\n        }\r\n      });\r\n\r\n    // Cleanup function to abort the fetch\r\n    return () => {\r\n      abortCont.abort();\r\n      setIsMounted(false); // Set the flag to indicate that the component is unmounted\r\n    };\r\n  }, [url]);\r\n\r\n  return { data, isPending, error };\r\n};\r\n\r\nexport default useFetch;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAElDC,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,IAAIC,eAAe,CAAC,CAAC;IAEvCC,KAAK,CAACZ,GAAG,EAAE;MAAEa,MAAM,EAAEH,SAAS,CAACG;IAAO,CAAC,CAAC,CACrCC,IAAI,CAAEC,GAAG,IAAK;MACb,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;QACX,MAAMC,KAAK,CAAC,4CAA4C,CAAC;MAC3D;MACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDJ,IAAI,CAAEZ,IAAI,IAAK;MACd,IAAIM,SAAS,EAAE;QAAE;QACfH,YAAY,CAAC,KAAK,CAAC;QACnBF,OAAO,CAACD,IAAI,CAAC;QACbK,QAAQ,CAAC,IAAI,CAAC;MAChB;IACF,CAAC,CAAC,CACDY,KAAK,CAAEC,GAAG,IAAK;MACd,IAAIZ,SAAS,EAAE;QAAE;QACf,IAAIY,GAAG,CAACC,IAAI,KAAK,YAAY,EAAE;UAC7BC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;QAC9B,CAAC,MAAM;UACLlB,YAAY,CAAC,KAAK,CAAC;UACnBE,QAAQ,CAACa,GAAG,CAACI,OAAO,CAAC;QACvB;MACF;IACF,CAAC,CAAC;;IAEJ;IACA,OAAO,MAAM;MACXd,SAAS,CAACe,KAAK,CAAC,CAAC;MACjBhB,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,CAACT,GAAG,CAAC,CAAC;EAET,OAAO;IAAEE,IAAI;IAAEE,SAAS;IAAEE;EAAM,CAAC;AACnC,CAAC;AAACL,EAAA,CA1CIF,QAAQ;AA4Cd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}