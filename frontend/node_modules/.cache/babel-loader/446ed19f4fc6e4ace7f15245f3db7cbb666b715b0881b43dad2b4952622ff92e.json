{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\168960\\\\OneDrive - Places for People\\\\Documents\\\\Dashboard\\\\frontend\\\\src\\\\project.js\",\n  _s = $RefreshSig$();\nimport useFetch from \"./useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Project = ({\n  id,\n  name\n}) => {\n  _s();\n  const {\n    data,\n    isPending,\n    error\n  } = useFetch(`http://127.0.0.1:5000/projects/${id}`);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 20\n    }, this), isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 24\n    }, this), data && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Instances in \", name, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), data.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-preview2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: data.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", data.Status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Internal IP: \", data.Internal_IP]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"CPU Utilization: \", data.CPU_Utilization]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)]\n      }, data.ID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Project, \"aCgKfdtPrqLrDjpZRnAfprQw4fg=\", false, function () {\n  return [useFetch];\n});\n_c = Project;\nexport default Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["useFetch","jsxDEV","_jsxDEV","Fragment","_Fragment","Project","id","name","_s","data","isPending","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","className","Name","Status","Internal_IP","CPU_Utilization","ID","_c","$RefreshReg$"],"sources":["C:/Users/168960/OneDrive - Places for People/Documents/Dashboard/frontend/src/project.js"],"sourcesContent":["import useFetch from \"./useFetch\";\r\n\r\nconst Project = ({id, name}) => {\r\n\r\n    const { data, isPending, error } = useFetch(`http://127.0.0.1:5000/projects/${id}`)\r\n\r\n    return ( \r\n        <>\r\n        { error && <div>{ error }</div> }\r\n        { isPending && <div>Loading...</div> }\r\n        {data && (\r\n            <ul>\r\n                <h1>Instances in {name}:</h1>\r\n                {data.map(data => (\r\n                    <div className=\"project-preview2\" key={data.ID}>\r\n                    <h2>{data.Name}</h2>\r\n                    <p>Status: {data.Status}</p>\r\n                    <p>Internal IP: {data.Internal_IP}</p>\r\n                    <p>CPU Utilization: {data.CPU_Utilization}</p>\r\n\r\n                    </div>\r\n                ))}\r\n        \r\n            </ul>\r\n        )}  \r\n    </>\r\n     );\r\n  \r\n}\r\n \r\nexport default Project;"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,OAAO,GAAGA,CAAC;EAACC,EAAE;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EAE5B,MAAM;IAAEC,IAAI;IAAEC,SAAS;IAAEC;EAAM,CAAC,GAAGX,QAAQ,CAAE,kCAAiCM,EAAG,EAAC,CAAC;EAEnF,oBACIJ,OAAA,CAAAE,SAAA;IAAAQ,QAAA,GACED,KAAK,iBAAIT,OAAA;MAAAU,QAAA,EAAOD;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EAC7BN,SAAS,iBAAIR,OAAA;MAAAU,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACnCP,IAAI,iBACDP,OAAA;MAAAU,QAAA,gBACIV,OAAA;QAAAU,QAAA,GAAI,eAAa,EAACL,IAAI,EAAC,GAAC;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC5BP,IAAI,CAACQ,GAAG,CAACR,IAAI,iBACVP,OAAA;QAAKgB,SAAS,EAAC,kBAAkB;QAAAN,QAAA,gBACjCV,OAAA;UAAAU,QAAA,EAAKH,IAAI,CAACU;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpBd,OAAA;UAAAU,QAAA,GAAG,UAAQ,EAACH,IAAI,CAACW,MAAM;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5Bd,OAAA;UAAAU,QAAA,GAAG,eAAa,EAACH,IAAI,CAACY,WAAW;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtCd,OAAA;UAAAU,QAAA,GAAG,mBAAiB,EAACH,IAAI,CAACa,eAAe;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAJPP,IAAI,CAACc,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMzC,CACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEF,CACP;EAAA,eACH,CAAC;AAGP,CAAC;AAAAR,EAAA,CA1BKH,OAAO;EAAA,QAE0BL,QAAQ;AAAA;AAAAwB,EAAA,GAFzCnB,OAAO;AA4Bb,eAAeA,OAAO;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}